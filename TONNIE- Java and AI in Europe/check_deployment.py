import streamlit as st
import os
import sys
import importlib
import pandas as pd

def check_module(module_name):
    """Verifica se um m√≥dulo est√° instalado e dispon√≠vel"""
    try:
        importlib.import_module(module_name)
        return True
    except ImportError:
        return False

def check_file(file_path):
    """Verifica se um arquivo existe"""
    return os.path.exists(file_path)

def main():
    st.title("üîç Verificador de Deployment")
    st.write("Esta ferramenta verifica se todos os componentes necess√°rios est√£o dispon√≠veis.")
    
    # Informa√ß√µes do ambiente
    st.header("üìä Informa√ß√µes do Ambiente")
    st.write(f"**Python:** {sys.version}")
    st.write(f"**Diret√≥rio atual:** {os.getcwd()}")
    st.write(f"**Arquivos no diret√≥rio:**")
    files = os.listdir(".")
    st.write(", ".join(files))
    
    # Verificar m√≥dulos principais
    st.header("üìö M√≥dulos Python")
    modules = [
        "streamlit", "pandas", "numpy", "yfinance", "plotly", 
        "sklearn", "tradingview_ta", "requests", "feedparser", 
        "bcrypt", "dotenv"
    ]
    
    module_status = []
    for module in modules:
        status = check_module(module)
        module_status.append({"M√≥dulo": module, "Instalado": "‚úÖ" if status else "‚ùå"})
    
    st.table(pd.DataFrame(module_status))
    
    # Verificar arquivos importantes
    st.header("üìÅ Arquivos do Projeto")
    files_to_check = [
        "app.py", "ml_predictor.py", "ml_strategies.py", 
        "carteira_widget.py", "beginner_guide.py", "user_guide.py"
    ]
    
    file_status = []
    for file in files_to_check:
        status = check_file(file)
        file_status.append({"Arquivo": file, "Existe": "‚úÖ" if status else "‚ùå"})
    
    st.table(pd.DataFrame(file_status))
    
    # Verificar vari√°veis de ambiente
    st.header("üîê Vari√°veis de Ambiente")
    env_vars = ["SENDER_EMAIL", "SENDER_PASSWORD", "API_KEY"]
    
    env_status = []
    for var in env_vars:
        value = os.getenv(var)
        status = "‚úÖ" if value else "‚ùå"
        masked_value = "***" if value else "N√£o definido"
        env_status.append({"Vari√°vel": var, "Configurada": status, "Valor": masked_value})
    
    st.table(pd.DataFrame(env_status))
    
    # Instru√ß√µes para corrigir problemas
    st.header("üõ†Ô∏è Solu√ß√µes para Problemas Comuns")
    
    st.markdown("""
    ### M√≥dulos faltando
    Se algum m√≥dulo estiver faltando, verifique se ele est√° listado no arquivo `requirements.txt` e execute:
    ```
    pip install -r requirements.txt
    ```
    
    ### Arquivos faltando
    Certifique-se de que todos os arquivos Python necess√°rios foram enviados para o reposit√≥rio.
    
    ### Vari√°veis de ambiente n√£o configuradas
    Configure as vari√°veis de ambiente no painel do Render:
    1. Acesse o dashboard do seu servi√ßo
    2. Clique na aba "Environment"
    3. Adicione as vari√°veis necess√°rias
    """)

if __name__ == "__main__":
    main()